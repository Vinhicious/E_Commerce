-- Criar o banco de dados e usá-lo
DROP DATABASE IF EXISTS db_loja;
CREATE DATABASE db_loja;
USE db_loja;

-- Criar tabela clientes
DROP TABLE IF EXISTS clientes;
CREATE TABLE clientes (
    cliente_id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    nome VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    telefone VARCHAR(15) NOT NULL,
    data_cadastro DATE NOT NULL
);

-- Criar tabela endereços
DROP TABLE IF EXISTS enderecos;
CREATE TABLE enderecos (
    endereco_id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    rua VARCHAR(50) NOT NULL,
    estado VARCHAR(50) NOT NULL,
    cep INT NOT NULL,
    cliente_id INT NOT NULL,
    FOREIGN KEY (cliente_id) REFERENCES clientes(cliente_id)
);

-- Criar tabela categorias
DROP TABLE IF EXISTS categorias;
CREATE TABLE categorias (
    categoria_id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    nome VARCHAR(50) NOT NULL,
    descricao VARCHAR(50) NOT NULL
);

-- Criar tabela fornecedores
DROP TABLE IF EXISTS fornecedores;
CREATE TABLE fornecedores (
    fornecedor_id  INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    nome VARCHAR(50) NOT NULL,
    telefone VARCHAR(15) NOT NULL,
    email VARCHAR(50) NOT NULL
);

-- Criar tabela produtos
DROP TABLE IF EXISTS produtos;
CREATE TABLE produtos (
    produto_id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    nome VARCHAR(50) NOT NULL,
    descricao VARCHAR(50) NOT NULL,
    preco DECIMAL(10, 2) NOT NULL,
    estoque INT NOT NULL,
    categoria_id INT NOT NULL,
    fornecedor_id INT NOT NULL,
    FOREIGN KEY (categoria_id) REFERENCES categorias(categoria_id),
    FOREIGN KEY (fornecedor_id) REFERENCES fornecedores(fornecedor_id)
);

-- Criar tabela status_pedido
DROP TABLE IF EXISTS status_pedido;
CREATE TABLE status_pedido (
    status_id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    descricao VARCHAR(50) NOT NULL
);

-- Criar tabela vendas
DROP TABLE IF EXISTS vendas;
CREATE TABLE vendas (
    venda_id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    data_venda DATE NOT NULL,
    cliente_id INT NOT NULL,
    status_id INT NOT NULL,
    FOREIGN KEY (cliente_id) REFERENCES clientes(cliente_id),
    FOREIGN KEY (status_id) REFERENCES status_pedido(status_id)
);

-- Criar tabela itens_venda
DROP TABLE IF EXISTS itens_venda;
CREATE TABLE itens_venda (
    item_id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    venda_id INT NOT NULL,
    produto_id INT NOT NULL,
    quantidade INT NOT NULL,
    preco_unitario DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (venda_id) REFERENCES vendas(venda_id),
    FOREIGN KEY (produto_id) REFERENCES produtos(produto_id)
);

-- Criar tabela pagamentos
DROP TABLE IF EXISTS pagamentos;
CREATE TABLE pagamentos (
    pagamento_id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    venda_id INT NOT NULL,
    data_pagamento DATE NOT NULL,
    valor_pago DECIMAL(10, 2) NOT NULL,
    metodo_pagamento VARCHAR(50) NOT NULL,
    FOREIGN KEY (venda_id) REFERENCES vendas(venda_id)
);

-- Criar tabela carrinho
DROP TABLE IF EXISTS carrinho;
CREATE TABLE carrinho (
    carrinho_id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    cliente_id INT NOT NULL,
    produto_id INT NOT NULL,
    quantidade INT NOT NULL,
    FOREIGN KEY (cliente_id) REFERENCES clientes(cliente_id),
    FOREIGN KEY (produto_id) REFERENCES produtos(produto_id)
);
